potential targets

1. several blocks with the same hit counts which are high (>10 times)
  -- |------|xxxxxxxxxxxx|------| Cut half of the branches |------| is 2^10 large.
     in case some normal blocks are inside the chain of code blocks.
     cut means copy the reg status and (memory? maybe first find all the memory maps?). (to avoid a dependency constraint that the fake path must be executed, or the execution will fail).
     like a->....-> let flag=1 ----->final
     check(if flag == 1 and executed_blocks > 100000000) -> normal else exit(0)
     [+] claim that this check cannot be related to user input or random, unless the anti-fuzzing patch can determine which input is from normal user and which is from fuzzers. It means it can work on all anti-fuzzing schemes creating large fake paths.

2. blocks with extremely high hit counts
  -- Normal loops
  -- Pathced delay functions

3. blocks with extremely high execution time
  -- Normal core execution
  -- Expensive Calculation. E.g, hash. (can be either normal or patched)
     (1) I can identify hash comparisons for illustrations, but might be weak.
